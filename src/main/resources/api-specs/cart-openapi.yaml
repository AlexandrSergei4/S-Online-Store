openapi: "3.0.3"

info:
  title: "Iced Latte Shopping Cart API"
  description: "API allows users to manage their shopping cart items, including adding, updating, and deleting shopping cart items. It includes detailed error responses, supports authentication, and provides examples for better understanding."
  version: "1.0.0"
  contact:
    name: "Iced Latte Support"
    email: "zufar.sunagatov@gmail.com"

servers:
  - url: "http://localhost:8083"
    description: "Local development server"

tags:
  - name: "Shopping Cart"
    description: "Operations related to shopping cart items"

paths:
  /api/v1/cart/items:
    post:
      tags:
        - "Shopping Cart"
      summary: "Add items to the shopping cart"
      operationId: "addNewItemToShoppingSession"
      requestBody:
        description: "Payload containing a list of items to be added to the shopping cart."
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddNewItemsToShoppingSessionRequest"
            examples:
              add-multiple:
                summary: "Add Multiple Items"
                value: {"items": [{"productId": "a1b2c3d4", "productQuantity": 2}]}
      responses:
        "200":
          description: "Items added successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShoppingSessionDto"
        "400":
          description: "Invalid input, object invalid."
        "401":
          description: "Unauthorized access."
        "500":
          description: "Internal server error."
    patch:
      tags:
        - "Shopping Cart"
      summary: "Update shopping cart item quantity"
      operationId: "updateProductQuantityInShoppingSessionItem"
      requestBody:
        description: "Payload containing the shopping cart item ID and the quantity change."
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProductQuantityInShoppingSessionItemRequest"
            examples:
              increment-quantity:
                summary: "Increment Quantity"
                value: {"shoppingSessionItemId": "e5f6g7h8", "productQuantityChange": 1}
      responses:
        "200":
          description: "Shopping cart item quantity was updated successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShoppingSessionDto"
        "400":
          description: "Invalid input, object invalid."
        "401":
          description: "Unauthorized access."
        "500":
          description: "Internal server error."
    delete:
      tags:
        - "Shopping Cart"
      summary: "Remove items from the shopping cart"
      operationId: "deleteItemsFromShoppingSession"
      requestBody:
        description: "Payload containing an array of shopping cart item IDs to be removed."
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteItemsFromShoppingSessionRequest"
      responses:
        "200":
          description: "Items removed successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShoppingSessionDto"
        "400":
          description: "Invalid input, object invalid."
        "401":
          description: "Unauthorized access."
        "500":
          description: "Internal server error."
  /api/v1/cart:
    get:
      tags:
        - "Shopping Cart"
      summary: "Get the shopping cart of authorized user"
      description: "Get the shopping cart of authorized user"
      operationId: "getShoppingSession"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShoppingSessionDto"
        "400":
          description: "Invalid input, object invalid."
        "401":
          description: "Unauthorized access."
        "500":
          description: "Internal server error."

components:
  schemas:
    NewShoppingSessionItemDto:
      type: "object"
      properties:
        productId:
          type: "string"
          format: "uuid"
        productQuantity:
          type: "integer"
          format: "int32"
          minimum: 1
      required:
        - productId
        - productQuantity
    AddNewItemsToShoppingSessionRequest:
      type: "object"
      properties:
        items:
          type: "array"
          uniqueItems: true
          items:
            $ref: "#/components/schemas/NewShoppingSessionItemDto"
      required:
        - items
    ShoppingSessionDto:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        userId:
          type: "string"
          format: "uuid"
        items:
          type: "array"
          items:
            $ref: "#/components/schemas/ShoppingSessionItemDto"
        itemsQuantity:
          type: "integer"
          format: "int32"
        itemsTotalPrice:
          type: "number"
          format: "decimal"
        productsQuantity:
          type: "integer"
          format: "int32"
        createdAt:
          type: "string"
          format: "date-time"
        closedAt:
          type: "string"
          format: "date-time"
      required:
        - id
        - userId
        - items
        - itemsQuantity
        - itemsTotalPrice
        - productsQuantity
        - createdAt
    ShoppingSessionItemDto:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        productInfo:
          $ref: "product-openapi.yaml#/components/schemas/ProductInfoDto"
        productQuantity:
          type: "integer"
          format: "int32"
          minimum: 1
      required:
        - id
        - productInfo
        - productQuantity
    UpdateProductQuantityInShoppingSessionItemRequest:
      type: "object"
      properties:
        shoppingSessionItemId:
          type: "string"
          format: "uuid"
        productQuantityChange:
          type: "integer"
          format: "int32"
      required:
        - shoppingSessionItemId
        - productQuantityChange
    DeleteItemsFromShoppingSessionRequest:
      type: "object"
      properties:
        shoppingSessionItemIds:
          type: "array"
          items:
            type: "string"
            format: "uuid"
      required:
        - shoppingSessionItemIds