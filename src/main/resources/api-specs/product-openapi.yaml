openapi: "3.0.3"

info:
  title: "Online-Store API"
  description: "This API allows clients to interact with an online store's product catalog, including retrieval and listing of products."
  version: "1.0.0"

servers:
  - url: "http://localhost:8083"

tags:
  - name: "Product"
    description: "API endpoints related to product management and retrieval."

paths:
  /api/v1/products/{productId}:
    get:
      tags:
        - "Product"
      summary: "Retrieve a Product by ID"
      description: "Fetch detailed information of a single product using its unique identifier."
      operationId: "getProductById"
      parameters:
        - name: "productId"
          in: "path"
          required: true
          description: "Unique identifier of the product."
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "The product was found and its details are returned."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductInfoDto"
        "404":
          description: "No product found for the given ID."

  /api/v1/products:
    get:
      tags:
        - "Product"
      summary: "List Products with Pagination"
      description: "Retrieve a paginated list of products, with optional sorting parameters."
      operationId: "getProducts"
      parameters:
        - name: "page"
          description: "page number in order (starting from 0)"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "0"
        - name: "size"
          description: "number of products in the output"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "50"
        - name: "sort_attribute"
          description: "the name of the product field by which they should be sorted"
          in: "query"
          required: false
          schema:
            type: "string"
            default: "name"
        - name: "sort_direction"
          description: "sorting direction (DESC or ASC)"
          in: "query"
          required: false
          schema:
            type: "string"
            default: "desc"
      responses:
        "200":
          description: "Paginated list of products retrieved successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductListWithPaginationInfoDto"
        "400":
          description: "Invalid parameters provided for pagination or sorting."

components:
  schemas:
    ProductInfoDto:
      type: "object"
      required:
        - id
        - name
        - price
        - quantity
        - active
      properties:
        id:
          type: "string"
          format: "uuid"
        name:
          type: "string"
        description:
          type: "string"
        price:
          type: "number"
          format: "decimal"
        quantity:
          type: "integer"
          format: "int32"
        active:
          type: "boolean"

    ProductListWithPaginationInfoDto:
      type: "object"
      required:
        - products
        - page
        - size
        - totalElements
        - totalPages
      properties:
        products:
          type: "array"
          items:
            $ref: "#/components/schemas/ProductInfoDto"
        page:
          type: "integer"
          format: "int32"
        size:
          type: "integer"
          format: "int32"
        totalElements:
          type: "integer"
          format: "int64"
        totalPages:
          type: "integer"
          format: "int32"
