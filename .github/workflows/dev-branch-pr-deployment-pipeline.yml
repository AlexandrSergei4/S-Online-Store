name: CI/CD Pipeline for DEV environment

on:
  push:
    branches: [ development ]
  pull_request:
    types: [ closed ]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  DEV_DOCKER_COMPOSE_FILE: docker-compose.yml
  ENV_BRANCH: ${{ github.ref_name }}
  DOCKER_COMPOSE_NETWORK: ${{ secrets.DOCKER_COMPOSE_NETWORK }}
  DOCKER_HUB_ACCOUNT_NAME: ${{ secrets.DOCKER_HUB_ACCOUNT_NAME }}
  APP_SERVER_PORT: ${{ secrets.APP_SERVER_PORT }}
  APP_PROFILE: dev
  APP_VERSION: ${{ github.ref_name }}-${{ github.sha | cut:0:7 }}

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code from the repository
        uses: actions/checkout@v4

      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: Load .env file
        uses: xom9ikk/dotenv@v2
        with:
          load-mode: strict

      - name: Set Short SHA
        run: echo "DOCKER_IMAGE_TAG=${{ github.ref_name }}-${{ github.sha | cut:0:7 }}" >> $GITHUB_ENV

      - name: Upload .env file as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: env-file
          path: .env

  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: setup-environment
    steps:
      - name: Checkout source code from the repository
        uses: actions/checkout@v4

      - name: Download .env file
        uses: actions/download-artifact@v2
        with:
          name: env-file
          path: .

      - name: Build the docker image
        run: docker-compose -f ${{ env.DEV_DOCKER_COMPOSE_FILE }} build

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Push images
        run: docker-compose -f ${{ env.DEV_DOCKER_COMPOSE_FILE }} push

  deploy-to-server:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    steps:
      - name: Deploy image via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEV_SSH_HOST }}
          port: ${{ secrets.DEV_SSH_PORT }}
          username: ${{ secrets.DEV_SSH_USER }}
          key: ${{ secrets.DEV_SSH_PRIV_KEY }}
          envs: DOCKERHUB_USERNAME, IMAGE_NAME, ENV_BRANCH, DOCKER_IMAGE_TAG
          script: |
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker pull $DOCKER_HUB_ACCOUNT_NAME/$IMAGE_NAME:$DOCKER_IMAGE_TAG
            cd /opt/project/backend-test
            docker-compose -f ${{ env.DEV_DOCKER_COMPOSE_FILE }} up -d
