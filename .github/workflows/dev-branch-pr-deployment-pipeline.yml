name: CI/CD Pipeline for DEV environment

on:
  push:
    branches: [ development ]
  pull_request:
    types: [ closed ]

env:
  ENV_FILE_PATH_IN_PRIVATE_REPOSITORY: ./Vault/IcedLatte/Backend/.env
  DOCKER_COMPOSE_FILE: docker-compose.yml
  DOCKER_CONTAINER_NAME: iced-latte-backend
  DOCKER_IMAGE_NAME: iced-latte-backend
  DOCKER_HUB_ACCOUNT_NAME: zufarexplainedit
  APP_PATH_ON_THE_REMOTE_SERVER: /opt/project/backend-test

jobs:
  prepare-env-file:
    name: Prepare the .env file
    runs-on: ubuntu-latest
    steps:

      - name: Clone the .env file from private repository (vault)
        uses: actions/checkout@v4
        with:
          repository: Sunagatov/Vault
          token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}
          path: Vault

      - name: Copy the .env file to the workspace
        run: cp $ENV_FILE_PATH_IN_PRIVATE_REPOSITORY ./

      - name: Store the .env file as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: env-file
          path: .env

  build-and-push-docker-image:
    name: Build and push docker image
    runs-on: ubuntu-latest
    needs: prepare-env-file
    steps:

      - name: Checkout source code from the repository
        uses: actions/checkout@v4

      - name: Store the required files as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: deployment-files
          path: |
            .env
            docker-compose.yml

      - name: Set DOCKER_IMAGE_TAG
        run: echo "DOCKER_IMAGE_TAG=$GITHUB_REF_NAME-${GITHUB_SHA:0:7}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_ACCOUNT_NAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push docker image
        run: |
          docker-compose -f ${{ env.DOCKER_COMPOSE_FILE }} build
          docker push ${{ env.DOCKER_HUB_ACCOUNT_NAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}

  deploy-app-to-server:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    steps:

      - name: Download deployment files
        uses: actions/download-artifact@v3
        with:
          name: deployment-files
          path: |
            .env
            docker-compose.yml

      - name: Set DOCKER_IMAGE_TAG
        run: echo "DOCKER_IMAGE_TAG=$GITHUB_REF_NAME-${GITHUB_SHA:0:7}" >> $GITHUB_ENV

      - name: Deploy image via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEV_SSH_HOST }}
          port: ${{ secrets.DEV_SSH_PORT }}
          username: ${{ secrets.DEV_SSH_USER }}
          key: ${{ secrets.DEV_SSH_PRIV_KEY }}
          script: |
            scp -r deployment/* ${{ secrets.DEV_SSH_USER }}@${{ secrets.DEV_SSH_HOST }}:${{ env.APP_PATH_ON_THE_REMOTE_SERVER }}
            cd ${{ env.APP_PATH_ON_THE_REMOTE_SERVER }}
            docker pull ${{ env.DOCKER_HUB_ACCOUNT_NAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}
            docker-compose -f ${{ env.DOCKER_COMPOSE_FILE }} up -d
