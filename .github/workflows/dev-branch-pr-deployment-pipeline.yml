name: CI/CD Pipeline for DEV environment

on:
  push:
    branches: [ development ]
  pull_request:
    types: [ closed ]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  DEV_DOCKER_COMPOSE_FILE: docker-compose.dev.yml

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create .env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
          echo $PWD
      - name: Load .env file
        uses: xom9ikk/dotenv@v2
        with:
          load-mode: strict
      - name: Read envs
        run: |
          export

  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: setup-environment
    steps:
      - name: Fetch sources
        uses: actions/checkout@v2
      - name: Build the docker image
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
          export DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
          export IMAGE_NAME=${{ secrets.IMAGE_NAME }}
          export IMAGE_TAG=$GITHUB_REF_NAME-${GITHUB_SHA:0:7}
          docker-compose -f $DEV_DOCKER_COMPOSE_FILE build
          export
      - name: Log in to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push image
        run: docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:$GITHUB_REF_NAME-${GITHUB_SHA:0:7}

  deploy-to-server:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    steps:
      - name: Create variables for image tag
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
          echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> "$GITHUB_ENV"
      - name: Deploy image via SSH
        uses: appleboy/ssh-action@v1.0.0
        env:
          ENV_BRANCH: ${{ env.branch }}
          ENV_SHA: ${{ env.sha_short }}
        with:
          envs:
            ENV_BRANCH, ENV_SHA
          host: ${{ secrets.DEV_SSH_HOST }}
          port: ${{ secrets.DEV_SSH_PORT }}
          username: ${{ secrets.DEV_SSH_USER }}
          key: ${{ secrets.DEV_SSH_PRIV_KEY }}
          script: |
            export DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            export IMAGE_NAME=${{ secrets.IMAGE_NAME }}
            export IMAGE_TAG=$ENV_BRANCH-$ENV_SHA
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker pull $DOCKERHUB_USERNAME/$IMAGE_NAME:$IMAGE_TAG
            export
            cd /opt/project/actions-runner/_work/Online-Store-Frontend/Online-Store-Frontend && docker-compose -f docker-compose.dev.yml up -d
