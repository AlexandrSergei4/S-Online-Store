name: CI/CD Pipeline for DEV environment

on:
  push:
    branches: [ development ]
  pull_request:
    types: [ closed ]

env:
  PRIVATE_REPO_ACCESS_TOKEN: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}
  PRIVATE_REPOSITORY: ${{ secrets.PRIVATE_REPOSITORY }}
  ENV_FILE_PATH_IN_PRIVATE_REPOSITORY: ${{ secrets.ENV_FILE_PATH_IN_PRIVATE_REPOSITORY }}
  DOCKER_COMPOSE_FILE: docker-compose.yml
  DOCKER_CONTAINER_NAME: iced-latte-backend
  DOCKER_HUB_ACCOUNT_NAME: ${{ secrets.DOCKER_HUB_ACCOUNT_NAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  DOCKER_IMAGE_NAME: iced-latte-backend
  APP_PATH_ON_THE_REMOTE_SERVER: /opt/project/backend-test

jobs:
  prepare-env-file:
    name: Prepare the .env file
    runs-on: ubuntu-latest
    steps:

      - name: Clone the .env file from private repository (vault)
        uses: actions/checkout@v4
        with:
          repository: Sunagatov/Vault
          token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}
          path: Vault

      - name: Copy the .env file to the workspace
        run: cp ./Vault/IcedLatte/Backend/.env ./

      - name: Store the .env file as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: env-file
          path: .env

  build-and-push-docker-image:
    name: Build and push docker image
    runs-on: ubuntu-latest
    needs: prepare-env-file
    steps:

      - name: Checkout source code from the repository
        uses: actions/checkout@v4

      - name: Download .env file
        uses: actions/download-artifact@v3
        with:
          name: env-file
          path: .

      - name: Set DOCKER_IMAGE_TAG
        id: docker_image_tag
        run: echo "DOCKER_IMAGE_TAG=$GITHUB_REF_NAME-${GITHUB_SHA:0:7}" >> $GITHUB_ENV

      - name: Build and push docker image
        run: |
          docker-compose -f $DOCKER_COMPOSE_FILE build
          echo $DOCKER_HUB_TOKEN | docker login -u $DOCKER_HUB_ACCOUNT_NAME --password-stdin
          docker push $DOCKER_HUB_ACCOUNT_NAME/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG

#  deploy-app-to-server:
#    runs-on: ubuntu-latest
#    needs: build-and-push-docker-image
#    steps:
#
#      - name: Download .env file
#        uses: actions/download-artifact@v3
#        with:
#          name: env-file
#          path: .
#
#      - name: Deploy image via SSH
#        uses: appleboy/ssh-action@v1.0.0
#        with:
#          host: ${{ secrets.DEV_SSH_HOST }}
#          port: ${{ secrets.DEV_SSH_PORT }}
#          username: ${{ secrets.DEV_SSH_USER }}
#          key: ${{ secrets.DEV_SSH_PRIV_KEY }}
#          envs: DOCKERHUB_USERNAME, IMAGE_NAME, ENV_BRANCH, DOCKER_IMAGE_TAG
#          script: |
#            export APP_PROFILE=dev
#            export APP_VERSION=$DOCKER_IMAGE_TAG
#            export DOCKER_COMPOSE_FILE=docker-compose.yml
#            export DOCKER_CONTAINER_NAME=iced-latte-backend
#            export DOCKER_HUB_ACCOUNT_NAME=${{ secrets.DOCKER_HUB_ACCOUNT_NAME }}
#            export DOCKER_HUB_TOKEN=${{ secrets.DOCKER_HUB_TOKEN }}
#            export DOCKER_IMAGE_NAME=${{ secrets.DOCKER_IMAGE_NAME }}
#            export DOCKER_COMPOSE_NETWORK=${{ secrets.DOCKER_COMPOSE_NETWORK }}
#            export DOCKER_IMAGE_TAG=$DOCKER_IMAGE_TAG
#            export APP_SERVER_PORT=${{ secrets.APP_SERVER_PORT }}
#            echo $DOCKER_HUB_TOKEN | docker login -u $DOCKER_HUB_ACCOUNT_NAME --password-stdin
#            docker pull $DOCKER_HUB_ACCOUNT_NAME/$DOCKER_IMAGE_NAME:${{ env.IMAGE_TAG }}
#            cd $APP_PATH_ON_THE_REMOTE_SERVER
#            docker-compose -f docker-compose.yml up -d
