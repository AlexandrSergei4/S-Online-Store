name: CI/CD Pipeline for DEV environment

on:
  push:
    branches: [ development ]
  pull_request:
    types: [ closed ]

env:
  PRIVATE_REPO_ACCESS_TOKEN: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}
  PRIVATE_REPOSITORY: ${{ secrets.PRIVATE_REPOSITORY }}
  ENV_FILE_PATH_IN_PRIVATE_REPOSITORY: ${{ secrets.ENV_FILE_PATH_IN_PRIVATE_REPOSITORY }}

jobs:
  prepare-env-file:
    runs-on: ubuntu-latest
    steps:
      - name: Copy env from the private repository
        uses: actions/checkout@v4
        with:
          repository: Sunagatov/Vault
          token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}
          path: Vault

      - name: Copy .env file
        run: cp ./Vault/IcedLatte/Backend/.env ./

      - name: Load .env file
        uses: xom9ikk/dotenv@v2
        with:
          load-mode: strict

      - name: Upload .env file as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: env-file
          path: .env

  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: prepare-env-file
    steps:
      - name: Checkout source code from the repository
        uses: actions/checkout@v4

      - name: Download .env file
        uses: actions/download-artifact@v3
        with:
          name: env-file
          path: .

      - name: Set DOCKER_IMAGE_TAG
        run: echo "DOCKER_IMAGE_TAG=$GITHUB_REF_NAME-${GITHUB_SHA:0:7}" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          set -a
          source .env
          set +a
          export DOCKER_IMAGE_NAME=${DOCKER_IMAGE_NAME}
          export DOCKER_IMAGE_TAG=${DOCKER_IMAGE_TAG}
          export DOCKER_HUB_ACCOUNT_NAME=${DOCKER_HUB_ACCOUNT_NAME}
          export DOCKER_COMPOSE_NETWORK=${DOCKER_COMPOSE_NETWORK}
          export APP_SERVER_PORT=${APP_SERVER_PORT}
          export DOCKER_CONTAINER_NAME=${DOCKER_CONTAINER_NAME}
          docker-compose -f $DEV_DOCKER_COMPOSE_FILE build
          echo $DOCKER_HUB_TOKEN | docker login -u $DOCKER_HUB_ACCOUNT_NAME --password-stdin
          echo "DOCKER_IMAGE_TAG=$GITHUB_REF_NAME-${GITHUB_SHA:0:7}" >> $GITHUB_ENV
          docker push $DOCKER_HUB_ACCOUNT_NAME/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG


  deploy-app-to-server:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    steps:
      - name: Download .env file
        uses: actions/download-artifact@v3
        with:
          name: env-file
          path: .
      - name: Deploy image via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEV_SSH_HOST }}
          port: ${{ secrets.DEV_SSH_PORT }}
          username: ${{ secrets.DEV_SSH_USER }}
          key: ${{ secrets.DEV_SSH_PRIV_KEY }}
          envs: DOCKERHUB_USERNAME, IMAGE_NAME, ENV_BRANCH, DOCKER_IMAGE_TAG
          script: |
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker pull $DOCKER_HUB_ACCOUNT_NAME/$IMAGE_NAME:$DOCKER_IMAGE_TAG
            cd /opt/project/backend-test
            docker-compose -f ${{ env.DEV_DOCKER_COMPOSE_FILE }} up -d
