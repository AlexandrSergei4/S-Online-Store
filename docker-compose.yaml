version: '3.9'
services:

  #
  # Localstack
  #
  localstack:
    image: 'localstack/localstack:latest'
    container_name: localstack
    hostname: awslocal
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    user: root
    environment:
      DEBUG: 0
      SERVICES: "sqs,sns,dynamodb"
      HOSTNAME_EXTERNAL: awslocal
      DATA_DIR: "/var/lib/localstack/data"
      AWS_DEFAULT_REGION: us-east-1
      DYNAMODB_SHARE_DB: 1
      DYNAMODB_IN_MEMORY: 1
      EDGE_PORT: 4566
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./init-scripts:/etc/localstack/init/ready.d"
    networks:
      - online-store-app-network
    profiles:
      - prod
      - test

  #
  # Online Store App
  #
  online-store-app:
    image: 'online-store/online-store:latest'
    container_name: online-store
    ports:
      - "8081:8081"
    user: root
    environment:
      AWS_ENDPOINT_URL: http://awslocal:4566
    healthcheck:
      test: "curl --fail --silent localhost:8081/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      localstack:
        condition: service_healthy
    build:
      context: ./
      dockerfile: docker/online-store-app/Dockerfile
    deploy:
      replicas: 1
    networks:
      - online-store-app-network
    profiles:
      - prod

  #
  # Prometheus
  #
  prometheus:
    image: 'prom/prometheus:latest'
    container_name: prometheus
    volumes:
      - './prometheus.yaml:/etc/prometheus/config.yaml'
    command: '--config.file=/etc/prometheus/config.yaml'
    ports:
      - '9090:9090'
    depends_on:
      online-store-app:
        condition: service_healthy
    networks:
      - online-store-app-network
    profiles:
      - prod
      - test

  #
  # Grafana
  #
  grafana:
    image: 'grafana/grafana-oss:latest'
    container_name: grafana
    pull_policy: always
    restart: unless-stopped
    user: root
    ports:
       - '3000:3000'
    environment:
       - GF_SECURITY_ADMIN_PASSWORD=admin
       - GF_USERS_ALLOW_SIGN_UP=false
       - GF_SERVER_DOMAIN=host.docker.internal
       - GF_LOG_MODE=console file
       - GF_LOG_FILTERS=alerting.notifier.slack:debug alertmanager:debug ngalert:debug
    depends_on:
       - prometheus
    profiles:
      - prod
      - test

networks:
  online-store-app-network:
    driver: bridge